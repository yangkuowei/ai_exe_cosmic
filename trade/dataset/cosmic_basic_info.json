[
  {
    "instruction": "请解释什么是软件度量？",
    "input": "",
    "output": "软件度量是指对软件规模、软件项目工作量、软件项目开发成本、软件质量等事项进行量化，使复杂的软件过程通过数字的描述让相关人员能够正确理解和管理。"
  },
  {
    "instruction": "软件度量有什么重要意义或能满足哪些需求？",
    "input": "",
    "output": "软件度量主要满足三方面需求：1. 项目管理需求：帮助项目经理根据度量数据合理部署和分配资源。2. 组织需求：使组织能清楚了解开发的效率和质量总体水平。3. 用户需求：帮助用户判断投入资金、项目交付合理期限以及判定项目质量。"
  },
  {
    "instruction": "请简述功能点分析法 (FPA) 的核心思想。",
    "input": "",
    "output": "功能点分析法 (FPA) 的核心思想是从用户视角（即业务价值）出发度量软件的大小，主要关注软件存储有用数据和处理有用数据的能力。它是一种与具体编程语言无关的软件规模衡量方法。"
  },
  {
    "instruction": "请解释什么是 COSMIC 软件评估方法？",
    "input": "",
    "output": "COSMIC 方法是一种功能点分析方法（遵循 ISO/IEC 19761 标准），它包含一套模型、原则、规则和过程，专门用于度量一个给定软件块的功能性用户需求 (FUR) 的规模。其核心特点是只关注数据移动。"
  },
  {
    "instruction": "在 COSMIC 方法中，什么是功能性用户需求 (FUR)？",
    "input": "",
    "output": "功能性用户需求 (FUR) 是用户需求的子集，它以任务和服务的形式描述软件需要“做什么”，是 COSMIC 方法度量的直接对象。它区别于非功能性需求，但某些非功能性需求可能需要转化为功能性需求来度量。"
  },
  {
    "instruction": "COSMIC 方法度量规模时，其结果与哪些因素无关？体现了什么特性？",
    "input": "",
    "output": "COSMIC 方法度量的功能规模被设计成只与被度量软件的 FUR 有关，而与实现 FUR 的需求和限制无关。这意味着度量结果不依赖于实现需求的具体技术平台、编程语言、开发工具或方法论等。这体现了其技术平台无关性和客观性。"
  },
  {
    "instruction": "COSMIC 方法的核心度量原理是什么？基于什么模型？",
    "input": "",
    "output": "COSMIC 方法的核心度量原理是关注“数据移动 (Data Movement)”。它基于一个通用软件模型，该模型将软件视为一个通过“边界 (Boundary)”与外部“功能用户”（如人、其他系统、设备）和“持久存储器”进行交互的实体。度量的就是数据组跨越边界或与持久存储器交互的移动。"
  },
  {
    "instruction": "COSMIC 方法识别哪四种基本的数据移动类型？请分别说明。",
    "input": "",
    "output": "COSMIC 方法识别四种基本数据移动类型：\n1. 输入 (Entry, E)：数据组从功能用户处，穿过边界，进入待度量软件。\n2. 输出 (Exit, X)：数据组从待度量软件内部，穿过边界，传递给功能用户。\n3. 读 (Read, R)：数据组从持久存储器中被读取到待度量软件内部。\n4. 写 (Write, W)：数据组从待度量软件内部被写入到持久存储器。"
  },
  {
    "instruction": "COSMIC 方法使用的度量单位是什么？如何定义？",
    "input": "",
    "output": "COSMIC 方法使用的度量单位是 CFP (COSMIC Function Point)。每一个被识别出的数据移动（无论是 E, X, R, 还是 W）都被赋予一个标准大小，计为 1 CFP。"
  },
  {
    "instruction": "COSMIC 度量过程包含哪三个主要阶段？",
    "input": "",
    "output": "COSMIC 度量过程包含三个主要阶段：\n1. 度量策略阶段 (Measurement Strategy Phase)\n2. 映射阶段 (Mapping Phase)\n3. 度量阶段 (Measurement Phase)"
  },
  {
    "instruction": "请描述 COSMIC 度量的第一个阶段：度量策略阶段的目标和关键活动。",
    "input": "",
    "output": "度量策略阶段的目标是明确度量的目的（如成本估算、范围管理等）和范围（确定待度量软件的边界和功能）。关键活动包括：识别客户需求（如具体项目或工单）、识别与软件交互的功能用户（数据的发起者和接收者）、以及识别功能性用户需求 (FUR)。"
  },
  {
    "instruction": "请描述 COSMIC 度量的第二个阶段：映射阶段的目标和关键活动。",
    "input": "",
    "output": "映射阶段的目标是依据 COSMIC 模型和规则，将度量策略阶段识别出的 FUR 转换为可度量的 COSMIC 组件。关键活动包括：\n1. 识别功能过程 (Functional Process)：将 FUR 分解为由触发事件启动的、可独立执行的最小功能单元。\n2. 识别数据组 (Data Group)：识别在功能过程中被移动的、描述业务兴趣对象的数据属性集合。\n3. 识别数据移动 (Data Movement)：在每个功能过程内，精确识别移动单个数据组实例的每一次 E, X, R, W 操作。"
  },
  {
    "instruction": "在 COSMIC 的映射阶段，什么是功能过程 (Functional Process)？",
    "input": "",
    "output": "功能过程是用户功能需求集合的一个基本部件。它由一个或多个触发事件（通常是 E 类型数据移动）启动，包含一组为响应触发事件而必须执行的、唯一的、可独立执行的数据移动序列。当它执行完所有被要求的任务之后，功能过程结束。它代表了软件的一个最小功能执行单元。"
  },
  {
    "instruction": "在 COSMIC 的映射阶段，什么是数据组 (Data Group)？",
    "input": "",
    "output": "数据组是一个唯一的、非空的、无序的数据属性集合，它描述了一个业务上的“兴趣对象 (Object of Interest)”。例如，“客户信息”或“订单详情”可以被视为数据组。数据移动操作的是数据组的实例。"
  },
  {
    "instruction": "请描述 COSMIC 度量的第三个阶段：度量阶段的目标和关键活动。",
    "input": "",
    "output": "度量阶段的目标是基于映射阶段识别出的数据移动，进行实际的功能规模量化计算。关键活动包括：\n1. 为每一个识别出的数据移动（E, X, R, W）分配 1 CFP。\n2. 计算每个功能过程的规模，即其包含的所有数据移动的 CFP 之和。\n3. 计算待度量软件（或其特定部分）的总功能规模，即所有功能过程的 CFP 总和。\n4. 度量软件变更的功能规模，通过计算增加、修改、删除的数据移动对应的 CFP 总和来确定。"
  },
  {
    "instruction": "如何计算一个 COSMIC 功能过程的功能规模？",
    "input": "",
    "output": "一个 COSMIC 功能过程的功能规模等于其包含的所有数据移动（输入 E, 输出 X, 读 R, 写 W）的 CFP 数量之和。计算公式为：规模(功能过程) = Σ 规模(输入) + Σ 规模(输出) + Σ 规模(读) + Σ 规模(写)。"
  },
  {
    "instruction": "当软件发生变更时，如何使用 COSMIC 度量变更的功能规模？",
    "input": "",
    "output": "软件变更的功能规模通过分别计算变更中涉及的增加的数据移动、修改的数据移动和删除的数据移动对应的 CFP，然后将这三部分加总得到。公式为：规模(软件块的变更) = Σ 规模(增加的数据移动) + Σ 规模(变更的数据移动) + Σ 规模(删除的数据移动)。"
  },
  {
    "instruction": "COSMIC 度量得出的 CFP 结果最终如何应用于软件项目，例如工作量估算？",
    "input": "",
    "output": "COSMIC 度量得出的总 CFP 值（功能规模）可以结合组织的性能基准数据（如历史项目的交付速率，单位：人时/CFP 或 人天/CFP）或行业数据，用于估算软件开发项目所需的工作量。这个估算的工作量通常会覆盖从需求分析、设计、编码、测试到移交等整个软件开发生命周期的活动。"
  },
  {
    "instruction": "根据广西新需求的编写要求，请解释 COSMIC 中的 '输入 E' 数据移动类型。",
    "input": "",
    "output": "根据广西新需求的编写要求，输入 E (Entry) 存在于系统的内外部交互，是用户直接参与的，用户输入内容并交给系统处理。"
  },
  {
    "instruction": "根据广西新需求的编写要求，请解释 COSMIC 中的 '输出 X' 数据移动类型。",
    "input": "",
    "output": "根据广西新需求的编写要求，输出 X (Exit) 存在于系统的内外部交互，也是用户会直接参与。它是系统将内容返回给发起者或进行输出的操作，是功能过程的输出物，区别于 W (写)。"
  },
  {
    "instruction": "根据广西新需求的编写要求，请解释 COSMIC 中的 '读 R' 数据移动类型。",
    "input": "",
    "output": "根据广西新需求的编写要求，读 R (Read) 存在于系统内部，可以理解为内部的读操作。即系统拿到关键值后，在数据库或文件中进行读取的操作。数据被拿来使用就属于 R。"
  },
  {
    "instruction": "根据广西新需求的编写要求，请解释 COSMIC 中的 '写 W' 数据移动类型。",
    "input": "",
    "output": "根据广西新需求的编写要求，写 W (Write) 存在于系统内部，指将系统处理完的数据写入到数据库或文件进行保存的操作。即将一个数据从功能处理移动到持久存储介质，数据的变更或生成需要保存时使用 W。"
  },
  {
    "instruction": "在广西新需求的 COSMIC 功能点拆分表中，A 列 '客户需求' 应如何填写？有什么注意事项？",
    "input": "",
    "output": "在广西新需求的 COSMIC 功能点拆分表中，A 列 '客户需求' 应填写需求名称，且需与送审材料的需求名称一致（不带需求编码）。注意，需求名称和表格内容描述中不应出现“漏洞修复”、“安全整改”等字眼，如有需修改。"
  },
  {
    "instruction": "根据广西新需求的编写要求，如何定义和识别 COSMIC 功能点拆分表中的 '功能用户' (B 列)？",
    "input": "",
    "output": "功能用户是指使用该功能或站在其角度度量软件规模的人、设备或软件系统。它是与被度量软件交互的对象。识别时需注意：发起者和接收方不能相同；一般是登录用户、系统等，不能是操作系统；可以是自然人、系统、对等软件、程序构件，只包含数据发起者和数据接受者（例如，发起者：个人用户，接收者：客户端）。可以通过需求分析和设计出的业务流程（如功能架构图、原始需求和功能模块设计）来识别。"
  },
  {
    "instruction": "功能用户的发起者和接收方可以是同一个吗？",
    "input": "",
    "output": "不可以，根据广西新需求的编写要求，功能用户的发起者和接收方不能一样。"
  },
  {
    "instruction": "在广西新需求的 COSMIC 功能点拆分表中，C 列 '功能用户需求' 应如何描述？",
    "input": "",
    "output": "功能用户需求 (FUR) 是用户需求的子集，描述软件以任务和服务的形式做什么。应从业务角度描述，而非开发角度。可以包含关联影响的业务。一个功能用户需求可以对应多个功能过程。它是对原始需求分析后得到的改造点或功能清单中的最小颗粒度功能点。"
  },
  {
    "instruction": "根据广西新需求的编写要求，如何定义和描述 COSMIC 功能点拆分表中的 '触发事件' (D 列)？",
    "input": "",
    "output": "触发事件是由功能用户主动产生的事件，它使得功能用户产生数据，随后由触发输入移动。它不可再拆分（要么发生，要么没发生）。时钟/定时事件也可作为触发事件。描述应合理，如“用户点击XX按钮”、“打开XX页面”或“定时任务触发”。一个触发事件只能对应一个功能过程，且内容不能与功能过程相同。"
  },
  {
    "instruction": "由被度量软件请求用户输入的活动，算是触发事件吗？",
    "input": "",
    "output": "不算。根据广西新需求的编写要求，一个基本的经验法则是：由功能用户主动产生的事件是触发事件，由于被度量软件的请求而要去产生输入的活动，则不是触发事件。"
  },
  {
    "instruction": "在广西新需求的 COSMIC 功能点拆分表中，E 列 '功能过程' 应如何描述？它代表什么？",
    "input": "",
    "output": "功能过程是在功能用户需求基础上更详细的拆分，指系统内的功能处理（前台或后台），例如“查询xxx信息”、“办理xxx业务”。它是最小的、独立的、基本功能部件。描述应简单通俗，最好是动词+名称组合（如：个人用户查看赛况），从用户角度编写，而非代码逻辑。"
  },
  {
    "instruction": "描述 COSMIC 功能过程时，应避免使用哪些类型的词语（根据广西新需求要求）？",
    "input": "",
    "output": "根据广西新需求要求，描述功能过程时应避免开发专用术语，如：临时表、内存、缓存、检验、校验、分析、判断、解析、后台、数据库读取、接口返回、接口调用、生成一条User_id 等。"
  },
  {
    "instruction": "对于包含'校验'的需求，在 COSMIC 功能过程描述中应如何处理？",
    "input": "",
    "output": "COSMIC 认为校验过程没有数据移动，不单独算功能点。遇到校验类需求，应尽量描述整个功能模块的 ERWX 过程，体现跨层或跨界的数据移动。例如，'判断用户状态'可描述为'查询用户状态数据判断用户的状态'；'校验业务规则'可描述为'查询业务规则信息去校验XXX'。"
  },
  {
    "instruction": "如何处理像'读取数据'、'捞取SQL'、'报文'、'调用接口'这类描述，使其符合 COSMIC 功能过程的编写规范？",
    "input": "",
    "output": "应将其转换为体现数据移动的业务描述：'读取数据'改为'获取xxx信息用于xxx'；'捞取SQL'改为'读取xx业务相关数据'；'报文'改为'xx相关信息'；'调用接口'的本质是'输入xxx信息(E)'和'输出xxx信息(X)'；'入参'是'输入信息'；'出参'是'输出信息'。配置类描述一般不写。"
  },
  {
    "instruction": "在编写 COSMIC 功能过程时，关于重复性、与解决方案的对应关系以及具体性有哪些要求？",
    "input": "",
    "output": "要求包括：1. 上下文编写的功能过程不能重复，也不能将同一功能倒装再写一遍。2. 每个功能过程需与解决方案中第4章系统功能设计一一对应，明确是新增还是优化功能。3. 解决方案需充实，不同功能过程的功能概述不能完全一样。4. 功能过程描述要具体，不能笼统写“业务新增”，应写“XX业务新增”。5. 不能使用相同的功能过程处理同种数据。"
  },
  {
    "instruction": "关于 COSMIC 功能过程的拆分粒度和子过程数量，有什么建议或原则？",
    "input": "",
    "output": "建议注重拆分功能过程，尽量详细。可尝试将原有功能细分，如将一个包含发短信的业务拆分为“办理业务(EW)”、“检测用户信息(EX)”、“发送短信(EX)”。原则上一个功能过程不宜超过6个子过程描述。"
  },
  {
    "instruction": "一个 COSMIC 功能过程的子过程序列有什么基本结构要求？",
    "input": "",
    "output": "原则上，每个功能过程必须以一个输入 E 开始，中间可包含 E/R/W/X，必须以 X 或 W 结束。避免连续多个相同的 E、R 或 W（可交叉出现 ERWX），否则可能被视为重复无效读写。"
  },
  {
    "instruction": "不同功能过程的子过程描述可以完全相同吗？如何避免？",
    "input": "",
    "output": "不可以。如果不同功能过程的子过程描述完全相同（如都写“提交订单信息”），后续的功能点可能不被认可。应将具体的功能过程名称或区分性信息加入子过程描述中，以体现差异，例如：“提交跨省数据专线-1461功能费（境外留存）资费产品订购的订单信息”。"
  },
  {
    "instruction": "如果一个新增模块有两个相似的查询功能，如何计算功能点？",
    "input": "",
    "output": "如果两个查询功能在同一新增模块内，仅仅是查询不同的数据组，通常第一个查询会计算全量新增的功能点，第二个查询可能被视为复用第一个查询的逻辑。但如果它们属于不同的功能模块，则可能都算作新增。"
  },
  {
    "instruction": "编写 COSMIC 子过程描述 (F 列) 时，在内容关联性、重复性和统一性方面有哪些要求？",
    "input": "",
    "output": "要求：1. 子过程描述内容需与对应功能过程相关联，不写功能过程之外的内容。2. 上下文子过程不能有重复数据（即使语义不同但处理数据相同也算重复，需加入功能过程信息区分）。3. 类似业务的功能过程的子过程和话术内容要统一。4. 统一使用“xxx信息”或“xxx数据”，不要混用。"
  },
  {
    "instruction": "对于查询类和其他类型的功能，子过程描述通常有固定的行数和结构模式吗？（根据广西新需求）",
    "input": "",
    "output": "是的，根据广西新需求要求：查询类功能子过程固定写 3 行：ERX。除查询外，其他功能（如发送短信、下发、同步、打印、下载、上传、办理业务、增删改）通常写 2 行：EX 或 EW，具体看主要业务目的。也可根据情况中间加 R，但需谨慎，可能不被认可。"
  },
  {
    "instruction": "子过程描述的文本模板是怎样的？有什么注意事项？",
    "input": "",
    "output": "模板建议：E 输入 XXX 请求，R 读取 XXX，W 保存/更新/删除 XXX，X 返回/输出/发送 XXX。注意事项：子过程描述不能与功能过程描述一样，否则体现不出拆分；子过程要与功能过程相关联（如查询功能，E 输入 xxx 查询请求）；数据移动类型填写要与实际描述一致；除非需求明确要求，否则不允许写日志记录，因其通常不属于用户功能需求。"
  },
  {
    "instruction": "填写 COSMIC 数据移动类型 (G 列) 时，最重要的原则是什么？",
    "input": "",
    "output": "最重要的原则是必须按照实际情况填写，不能因为要避免连续出现多个相同类型（如 R 或 W）而随意填写错误的类型。例如，查询数据时移动类型应为 R，不能写成 W。"
  },
  {
    "instruction": "在 COSMIC 中，什么是数据组 (H 列)？填写时有什么要求？",
    "input": "",
    "output": "数据组是软件处理的数据对象（现实事物或概念），需要软件进行输入、输出、读或写操作，例如订单、人员、部门、合同等。填写时要求：不能为空；同一个功能过程的输入 E 和输出 X 的数据组不能相同；查询功能的读 R 和输出 X 的数据组可以相同。"
  },
  {
    "instruction": "填写 COSMIC 数据属性/数据组描述 (I 列) 时，有哪些具体要求以避免重复和歧义？",
    "input": "",
    "output": "要求：1. 数据组描述要具体，避免多个功能的数据组都简单描述为“订单数据”或“工单信息”。2. 每个功能过程的数据组和数据属性尽量不要相同，即使相同也要换一种说法，否则可能被视为复用而被删减工作量。3. 不要出现英文表名或字段名，需翻译成中文。"
  },
  {
    "instruction": "COSMIC 功能点拆分表格中，哪几列的内容组合起来不能相同，以避免被认为是重复或复用？",
    "input": "",
    "output": "根据要求，E 列（功能过程）、F 列（子过程描述）、H 列（数据组）、I 列（数据属性）这四列的组合内容，在不同行之间（尤其是不同功能过程之间）不能完全相同，否则会被认为是重复或可复用的功能点。"
  }

]
